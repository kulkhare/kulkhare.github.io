[ { "title": "Azure Event Hub consumers with symfony/php", "url": "/posts/azure-event-hub-consumers-with-symfony-php/", "categories": "Symfony, PHP, Azure, Event Hub, kafka, RdKafka", "tags": "symfont, php, azure, event hub, kafka, rdkafka, consumers", "date": "2023-08-16 21:10:00 +0530", "snippet": "Recently I had a requirement to consume Azure event hubs events using PHP/Symfony.To my surprise there were a number of SDK’s but none for PHP, also as of now there is no REST support for consuming events; doing so requires using the AMQP protocol.Well, look no further! In this post, I’ll guide you through the process of consuming Azure Event Hub messages using the rdkafka extension in a Symfony/PHP application.Azure Event Hub is a fully managed, real-time data streaming platform that can handle massive amounts of event data from various sources and applications.Unfortunately, there is no Event Hubs support in the Azure SDK for PHP, so we are going to use PHP rdkafka extension for Apache Kafka, which is compatible with Azure Event Hub.Let’s dive in!Step 1: Set Up Your Azure Event HubBefore you start consuming messages, you’ll need an Azure Event Hub instance. If you don’t have one already, head over to the Azure portal and create a new Event Hub namespace with the necessary settings.I am not going to cover that part in this post assuming you can do that successfully; you will have a connection string looking like this: Endpoint=sb://&lt;YOUR_NAMESPACE&gt;.windows.net/;SharedAccessKeyName=&lt;YOURA_ACCESS_KEY_NAME&gt;;SharedAccessKey=&lt;YOUR_ACCESS_KEY&gt;;EntityPath=&lt;YOUR_EVENT_PATH&gt;Step 2: Install the librdkafka extension and PECL-package # Install PHP pecl and pearsudo apt install php-pear# Install librdkafkasudo apt-get install -y librdkafka-dev# Install PECL-packagesudo pecl install rdkafka# Enable PHP-extension in PHP config. Add to php.inisudo nano /etc/php/7.4/cli/php.ini# add extension=rdkafka.so# Restart apache serversudo service apache2 restart Step 3: Install packages for symfony composer require symfony/messenger composer require enqueue/rdkafka composer require enqueue/enqueue-bundle composer require sroze/messenger-enqueue-transport composer require enqueue/async-event-dispatcher Step 4: Register bundles - add to config/bundles.php Enqueue\\Bundle\\EnqueueBundle::class =&gt; ['all' =&gt; true],Enqueue\\MessengerAdapter\\Bundle\\EnqueueAdapterBundle::class =&gt; ['all' =&gt; true], If you have Symfony 6^ it will be done automatically.Step 5: Add settings in config/packages/enqueue.yaml enqueue: default: transport: dsn: 'rdkafka://' global: ### See Kafka documentation regarding `group.id` property if you want to know more group.id: 'your-app' metadata.broker.list: '%env(resolve:KAFKA_BROKER_LIST)%' security.protocol: 'SASL_SSL' sasl.mechanisms: 'PLAIN' sasl.username: '$ConnectionString' sasl.password: '%env(resolve:AZURE_EVENT_MESSENGER_TRANSPORT_DSN)%' ### Download the certificate frome here (https://curl.se/docs/caextract.html) and put it somewhere in the app ssl.ca.location: 'config/certificates/cacert-2023-05-30.pem' log_level: '4' # 1~7 enable.partition.eof: 'true' topic: auto.offset.reset: 'earliest' commit_async: true client: null Configuration parameters used above can be found hereStep 6: Add settings in config/packages/messenger.yamlframework: messenger: transports: azure-event-hub: dsn: '%env(AZURE_MESSENGER_TRANSPORT_DSN)%' failed: 'in-memory://' routing: 'App\\Message\\DemoEvent': azure-event-hubStep 7: Add settings to .env### messenger ###AZURE_EVENT_MESSENGER_TRANSPORT_DSN=Endpoint=sb://&lt;YOUR_NAMESPACE&gt;.windows.net/;SharedAccessKeyName=&lt;YOURA_ACCESS_KEY_NAME&gt;;SharedAccessKey=&lt;YOUR_ACCESS_KEY&gt;;EntityPath=&lt;YOUR_EVENT_PATH&gt;### messenger ###### enqueue rdkafka ###AZURE_MESSENGER_TRANSPORT_DSN=enqueue://default?topic[name]=messages&amp;queue[name]=messagesKAFKA_BROKER_LIST=example-namesapece.servicebus.windows.net:9093### enqueue rdkafka ###Step 8: Event and EventeHandler// src/Message/DemoEvent.phpnamespace App\\Message;class DemoEvent{ public function __construct( private string $content, ) { } public function getContent(): string { return $this-&gt;content; }}// src/MessageHandler/DemoEventHandler.phpnamespace App\\MessageHandler;use App\\Message\\DemoEvent;use Symfony\\Component\\Messenger\\Attribute\\AsMessageHandler;#[AsMessageHandler]class DemoEventHandler{ public function __invoke(DemoEvent $event) { // ... do some work - like sending an SMS message! }} For more check Message and MessageHandler from symfony documentationStep 9: Run consumerphp bin/console messenger:consume azure-event-hubAnd that’s it! You now have a Symfony application set up to consume messages from Azure Event Hub using the rdkafka extension.Happy coding, and enjoy harnessing the power of real-time data streaming with Azure Event Hub!" }, { "title": "Laravel mongodb get error of Call to a member function prepare() on null", "url": "/posts/laravel-mongodb-get-error-of-call-to-a-member-function-prepare-on-null/", "categories": "Tech, Laravel, PHP, MongoDB", "tags": "tech, laravel, php, mongodb", "date": "2022-09-08 18:20:00 +0530", "snippet": "So long time ago I decided to use mongodb with laravel.I used this package from laravel-mongodb package from @jenssegers, it was very easy to install mongodb package into laravel. composer require jenssegers/mongodbAfter adding database credentials in .env I tried running database migrations, surprisingly the laravel migration were also ran without any errors.This issue occurred when I tried inserting data in User collection. php laravel get error of Call to a member function prepare() on nullThe issue was that laravel User Model by default uses this class Illuminate\\Foundation\\Auth\\User as Authenticatable which failed when using mongodb.The solution was to use Jenssegers\\Mongodb\\Auth\\User as Authenticatable in place of Illuminate\\Foundation\\Auth\\User as AuthenticatableHere is how my model looked after the change:namespace App\\Models;use Illuminate\\Database\\Eloquent\\Factories\\HasFactory;//use Illuminate\\Foundation\\Auth\\User as Authenticatable;use Illuminate\\Notifications\\Notifiable;use Laravel\\Sanctum\\HasApiTokens;use Jenssegers\\Mongodb\\Auth\\User as Authenticatable; // Added thisclass User extends Authenticatable{ use HasApiTokens, HasFactory, Notifiable; ````}This solved the problem for me, I hope it helps others also." }, { "title": "Forcing user account selection for Laravel Socialite plugin", "url": "/posts/forcing-user-account-selection-for-laravel-socialite-plugin/", "categories": "Tech, Laravel, Socialite, PHP, Social Login", "tags": "tech, laravel, socialite, php, social login", "date": "2022-08-27 00:32:00 +0530", "snippet": "I remember when I implemented Laravel Socialite in one of my website for users to login using their Google+ accounts. Everything was working fine but there was one issue after login for the first time user were unable to switch to a different Google account if they log out and then log back in.Once the following code is executed in the LoginController.php :public function redirectToProvider(){ return Socialite::driver('google')-&gt;redirect();}It automatically logs them in with Google account and redirects back to site without giving them the option to choose a different Google account.The problem was same for other social login like Facebook and Linkedin.The solution was to add a parameter \"select_account\" like below:public function redirectToProvider(){ return Socialite::driver('google')-&gt;with([\"prompt\" =&gt; \"select_account\"])-&gt;redirect();}This worked for me.Fairly simple solution but was not mentioned in @laravel documentation anywhere.I hope it help someone." }, { "title": "Welcome", "url": "/posts/welcome/", "categories": "Welcome", "tags": "welcome, first post, new site, kulkhare.com", "date": "2022-08-24 18:25:00 +0530", "snippet": "Hello visitor,This is my first post, I am going to post about programming and web development.Initially I will be focusing on technologies like GO, PHP, Mongo, MySql, Jquery, AWS, Docker, Bitbucket and Git.I may also post about IoT, electronics and other stuff depends on my hobby.I am hoping to be regular here and try to interact using post as much as possible.Thank you for your time :slightly_smiling_face:bundle exec jekyll compose “Forcing user account selection for Laravel Socialite plugin” –post" } ]
